% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{vaR}
\alias{vaR}
\title{vaR()}
\usage{
vaR(
  gene,
  variant,
  NM = NULL,
  CCDS = NULL,
  gene.specific.df = NULL,
  remote = TRUE,
  browser = "firefox",
  spliceai.program = FALSE,
  spliceai.genome = "hg19",
  spliceai.reference = NULL,
  spliceai.annotation = NULL,
  spliceai.distance = 1000,
  spliceai.masked = 1,
  provean.program = FALSE,
  provean.sh = NULL,
  spliceai.10k = FALSE,
  excel.results = FALSE,
  output.dir = NULL,
  google.search = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{gene}{gene of interest}

\item{variant}{variant of interest in coding DNA nomenclature}

\item{NM}{Accession number of the transcrit and mRNA from RefSeq. By default is NULL and vaRHC will consider the ones detailed in README file. Be careful if you use a different NM because the program has not been validated for it.}

\item{CCDS}{Consensus CDS id https://www.ncbi.nlm.nih.gov/projects/CCDS/CcdsBrowse.cgi. By default is NULL and vaRHC will consider the ones detailed in README file. Be careful if you use a different CCDS because the program has not been validated for it.}

\item{gene.specific.df}{By default is NULL, it uses the default parameters described in README. If you would like to change some defaults or include another gene, a template can be downloaded from Github: https://github.com/emunte/Class_variants/tree/main/documents/gen_especific.csv or in the package extdata folder and some parameters can be modified taking into account your preferences}

\item{remote}{Logical. Connect remotely to RSelenium server? By default is TRUE and will start Rselenium server.If it is FALSE vaRHC will not connect to insight database.}

\item{browser}{Which browser to start Rselenium server. By default is "firefox" (the recommended). If you do not have firefox installed try either "chrome" or "phantomjs".}

\item{spliceai.program}{Logical. By default is FALSE and it is assumed that SpliceAI program is not installed in your computer. If this parameter is FALSE, the program will only classify substitutions and simple deletion variants taking into account a spliceAI distance of 1000 and will show masked results. If you want to classify other variants please install SpliceAI (https://pypi.org/project/spliceai/) and set to TRUE the parameter.}

\item{spliceai.genome}{Fasta file assembly provided. It can only be "hg19" or "hg38" assembly. By default it will be hg19.}

\item{spliceai.reference}{Path to the Reference genome hg19 hg38 fasta file. hg19 file can be downloaded from http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz . By default is NULL and it will only be taken into account if spliceai.program is set to TRUE.}

\item{spliceai.annotation}{Path to gene annotation file. By default it uses the file data(gencode_spliceai_hg19). It must be txt.}

\item{spliceai.distance}{Integer. Maximum distance between the variant and gained/lost splice site (default: 1000)}

\item{spliceai.masked}{Mask scores representing annotated acceptor/donor gain and unannotated acceptor/donor loss (default: 1)}

\item{provean.program}{Logical. By default is FALSE and it is assumed that provean program is not installed in your computer.}

\item{provean.sh}{Path to provean.sh. It will only be considered if provean.program is set to TRUE.}

\item{spliceai.10k}{Logical. By default is FALSE and SpliceAI-10k will not be computed. It can only be computed if provean.program is TRUE.}

\item{excel.results}{Logical. By default is FALSE and no excel file would be produced. If TRUE and excel file will be saved}

\item{output.dir}{output.dir must provide the folder to store the results. By default is NULL.}

\item{google.search}{Logical. By default is FALSE and it will not look for variant results in google.}

\item{verbose}{logic. By default is FALSE. If TRUE, it includes status messages (if any).}
}
\value{
A list of two items: vaRinfo and vaRclass.  The first one stores variant information collected from diverse databases and the second one it is related to the criteria assigned to the variant and its final classification.
}
\description{
vaR function firstly collects different type of information related to the variant of interest (e.g. Population frequencies, in-silico predictions, some functional studies...).
Secondly,  it mixes all this information and following modified ACMG rules it returns the final classification of the variant and it specifies which criteria are given. Optionally, all the information can be printed in an excel file.
}
\examples{
\dontrun{
output.dir <- "/path/to/outputdir"
vaR (gene= "BRCA1", variant= "c.211A>G", output.dir = output.dir,  excel.results=FALSE)
}
}
\author{
Elisabet Munt√© Roca
}
